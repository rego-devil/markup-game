{"version":3,"sources":["webpack:///../node_modules/sticky-js/dist/sticky.compile.js","webpack:///../node_modules/sticky-js/index.js"],"names":["root","factory","module","exports","this","Sticky","selector","arguments","length","undefined","options","instance","Constructor","TypeError","_classCallCheck","elements","version","vp","getViewportSize","body","document","querySelector","wrap","marginTop","stickyFor","stickyClass","stickyContainer","updateScrollTopPosition","bind","window","addEventListener","run","prototype","_this","pageLoaded","setInterval","readyState","clearInterval","querySelectorAll","forEach","element","renderElement","_this2","sticky","active","parseInt","getAttribute","hasAttribute","container","getStickyContainer","rect","getRectangle","tagName","toLowerCase","onload","wrapElement","activate","insertAdjacentHTML","previousSibling","appendChild","top","height","width","indexOf","push","resizeEvent","initResizeEvents","scrollEvent","initScrollEvents","setPosition","_this3","resizeListener","onResizeEvents","destroyResizeEvents","removeEventListener","_this4","scrollListener","onScrollEvents","destroyScrollEvents","css","position","left","parentNode","display","scrollTop","offsetHeight","classList","remove","add","update","_this5","destroy","_this6","Math","max","offsetWidth","clientWidth","scrollWidth","clientHeight","scrollHeight","offsetTop","offsetLeft","offsetParent","documentElement","innerWidth","innerHeight","pageYOffset","clientTop","array","callback","i","len","properties","property","hasOwnProperty","style","__webpack_require__"],"mappings":"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","file":"scripts/sticky.chunk.js","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Sticky.js\n * Library for sticky elements written in vanilla javascript. With this library you can easily set sticky elements on your website. It's also responsive.\n *\n * @version 1.2.0\n * @author Rafal Galus <biuro@rafalgalus.pl>\n * @website https://rgalus.github.io/sticky-js/\n * @repo https://github.com/rgalus/sticky-js\n * @license https://github.com/rgalus/sticky-js/blob/master/LICENSE\n */\n\nvar Sticky = function () {\n  /**\n   * Sticky instance constructor\n   * @constructor\n   * @param {string} selector - Selector which we can find elements\n   * @param {string} options - Global options for sticky elements (could be overwritten by data-{option}=\"\" attributes)\n   */\n  function Sticky() {\n    var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Sticky);\n\n    this.selector = selector;\n    this.elements = [];\n\n    this.version = '1.2.0';\n\n    this.vp = this.getViewportSize();\n    this.body = document.querySelector('body');\n\n    this.options = {\n      wrap: options.wrap || false,\n      marginTop: options.marginTop || 0,\n      stickyFor: options.stickyFor || 0,\n      stickyClass: options.stickyClass || null,\n      stickyContainer: options.stickyContainer || 'body'\n    };\n\n    this.updateScrollTopPosition = this.updateScrollTopPosition.bind(this);\n\n    this.updateScrollTopPosition();\n    window.addEventListener('load', this.updateScrollTopPosition);\n    window.addEventListener('scroll', this.updateScrollTopPosition);\n\n    this.run();\n  }\n\n  /**\n   * Function that waits for page to be fully loaded and then renders & activates every sticky element found with specified selector\n   * @function\n   */\n\n\n  Sticky.prototype.run = function run() {\n    var _this = this;\n\n    // wait for page to be fully loaded\n    var pageLoaded = setInterval(function () {\n      if (document.readyState === 'complete') {\n        clearInterval(pageLoaded);\n\n        var elements = document.querySelectorAll(_this.selector);\n        _this.forEach(elements, function (element) {\n          return _this.renderElement(element);\n        });\n      }\n    }, 10);\n  };\n\n  /**\n   * Function that assign needed variables for sticky element, that are used in future for calculations and other\n   * @function\n   * @param {node} element - Element to be rendered\n   */\n\n\n  Sticky.prototype.renderElement = function renderElement(element) {\n    var _this2 = this;\n\n    // create container for variables needed in future\n    element.sticky = {};\n\n    // set default variables\n    element.sticky.active = false;\n\n    element.sticky.marginTop = parseInt(element.getAttribute('data-margin-top')) || this.options.marginTop;\n    element.sticky.stickyFor = parseInt(element.getAttribute('data-sticky-for')) || this.options.stickyFor;\n    element.sticky.stickyClass = element.getAttribute('data-sticky-class') || this.options.stickyClass;\n    element.sticky.wrap = element.hasAttribute('data-sticky-wrap') ? true : this.options.wrap;\n    // @todo attribute for stickyContainer\n    // element.sticky.stickyContainer = element.getAttribute('data-sticky-container') || this.options.stickyContainer;\n    element.sticky.stickyContainer = this.options.stickyContainer;\n\n    element.sticky.container = this.getStickyContainer(element);\n    element.sticky.container.rect = this.getRectangle(element.sticky.container);\n\n    element.sticky.rect = this.getRectangle(element);\n\n    // fix when element is image that has not yet loaded and width, height = 0\n    if (element.tagName.toLowerCase() === 'img') {\n      element.onload = function () {\n        return element.sticky.rect = _this2.getRectangle(element);\n      };\n    }\n\n    if (element.sticky.wrap) {\n      this.wrapElement(element);\n    }\n\n    // activate rendered element\n    this.activate(element);\n  };\n\n  /**\n   * Wraps element into placeholder element\n   * @function\n   * @param {node} element - Element to be wrapped\n   */\n\n\n  Sticky.prototype.wrapElement = function wrapElement(element) {\n    element.insertAdjacentHTML('beforebegin', '<span></span>');\n    element.previousSibling.appendChild(element);\n  };\n\n  /**\n   * Function that activates element when specified conditions are met and then initalise events\n   * @function\n   * @param {node} element - Element to be activated\n   */\n\n\n  Sticky.prototype.activate = function activate(element) {\n    if (element.sticky.rect.top + element.sticky.rect.height < element.sticky.container.rect.top + element.sticky.container.rect.height && element.sticky.stickyFor < this.vp.width && !element.sticky.active) {\n      element.sticky.active = true;\n    }\n\n    if (this.elements.indexOf(element) < 0) {\n      this.elements.push(element);\n    }\n\n    if (!element.sticky.resizeEvent) {\n      this.initResizeEvents(element);\n      element.sticky.resizeEvent = true;\n    }\n\n    if (!element.sticky.scrollEvent) {\n      this.initScrollEvents(element);\n      element.sticky.scrollEvent = true;\n    }\n\n    this.setPosition(element);\n  };\n\n  /**\n   * Function which is adding onResizeEvents to window listener and assigns function to element as resizeListener\n   * @function\n   * @param {node} element - Element for which resize events are initialised\n   */\n\n\n  Sticky.prototype.initResizeEvents = function initResizeEvents(element) {\n    var _this3 = this;\n\n    element.sticky.resizeListener = function () {\n      return _this3.onResizeEvents(element);\n    };\n    window.addEventListener('resize', element.sticky.resizeListener);\n  };\n\n  /**\n   * Removes element listener from resize event\n   * @function\n   * @param {node} element - Element from which listener is deleted\n   */\n\n\n  Sticky.prototype.destroyResizeEvents = function destroyResizeEvents(element) {\n    window.removeEventListener('resize', element.sticky.resizeListener);\n  };\n\n  /**\n   * Function which is fired when user resize window. It checks if element should be activated or deactivated and then run setPosition function\n   * @function\n   * @param {node} element - Element for which event function is fired\n   */\n\n\n  Sticky.prototype.onResizeEvents = function onResizeEvents(element) {\n    this.vp = this.getViewportSize();\n\n    element.sticky.rect = this.getRectangle(element);\n    element.sticky.container.rect = this.getRectangle(element.sticky.container);\n\n    if (element.sticky.rect.top + element.sticky.rect.height < element.sticky.container.rect.top + element.sticky.container.rect.height && element.sticky.stickyFor < this.vp.width && !element.sticky.active) {\n      element.sticky.active = true;\n    } else if (element.sticky.rect.top + element.sticky.rect.height >= element.sticky.container.rect.top + element.sticky.container.rect.height || element.sticky.stickyFor >= this.vp.width && element.sticky.active) {\n      element.sticky.active = false;\n    }\n\n    this.setPosition(element);\n  };\n\n  /**\n   * Function which is adding onScrollEvents to window listener and assigns function to element as scrollListener\n   * @function\n   * @param {node} element - Element for which scroll events are initialised\n   */\n\n\n  Sticky.prototype.initScrollEvents = function initScrollEvents(element) {\n    var _this4 = this;\n\n    element.sticky.scrollListener = function () {\n      return _this4.onScrollEvents(element);\n    };\n    window.addEventListener('scroll', element.sticky.scrollListener);\n  };\n\n  /**\n   * Removes element listener from scroll event\n   * @function\n   * @param {node} element - Element from which listener is deleted\n   */\n\n\n  Sticky.prototype.destroyScrollEvents = function destroyScrollEvents(element) {\n    window.removeEventListener('scroll', element.sticky.scrollListener);\n  };\n\n  /**\n   * Function which is fired when user scroll window. If element is active, function is invoking setPosition function\n   * @function\n   * @param {node} element - Element for which event function is fired\n   */\n\n\n  Sticky.prototype.onScrollEvents = function onScrollEvents(element) {\n    if (element.sticky.active) {\n      this.setPosition(element);\n    }\n  };\n\n  /**\n   * Main function for the library. Here are some condition calculations and css appending for sticky element when user scroll window\n   * @function\n   * @param {node} element - Element that will be positioned if it's active\n   */\n\n\n  Sticky.prototype.setPosition = function setPosition(element) {\n    this.css(element, { position: '', width: '', top: '', left: '' });\n\n    if (this.vp.height < element.sticky.rect.height || !element.sticky.active) {\n      return;\n    }\n\n    if (!element.sticky.rect.width) {\n      element.sticky.rect = this.getRectangle(element);\n    }\n\n    if (element.sticky.wrap) {\n      this.css(element.parentNode, {\n        display: 'block',\n        width: element.sticky.rect.width + 'px',\n        height: element.sticky.rect.height + 'px'\n      });\n    }\n\n    if (element.sticky.rect.top === 0 && element.sticky.container === this.body) {\n      this.css(element, {\n        position: 'fixed',\n        top: element.sticky.rect.top + 'px',\n        left: element.sticky.rect.left + 'px',\n        width: element.sticky.rect.width + 'px'\n      });\n    } else if (this.scrollTop > element.sticky.rect.top - element.sticky.marginTop) {\n      this.css(element, {\n        position: 'fixed',\n        width: element.sticky.rect.width + 'px',\n        left: element.sticky.rect.left + 'px'\n      });\n\n      if (this.scrollTop + element.sticky.rect.height + element.sticky.marginTop > element.sticky.container.rect.top + element.sticky.container.offsetHeight) {\n\n        if (element.sticky.stickyClass) {\n          element.classList.remove(element.sticky.stickyClass);\n        }\n\n        this.css(element, {\n          top: element.sticky.container.rect.top + element.sticky.container.offsetHeight - (this.scrollTop + element.sticky.rect.height) + 'px' });\n      } else {\n        if (element.sticky.stickyClass) {\n          element.classList.add(element.sticky.stickyClass);\n        }\n\n        this.css(element, { top: element.sticky.marginTop + 'px' });\n      }\n    } else {\n      if (element.sticky.stickyClass) {\n        element.classList.remove(element.sticky.stickyClass);\n      }\n\n      this.css(element, { position: '', width: '', top: '', left: '' });\n\n      if (element.sticky.wrap) {\n        this.css(element.parentNode, { display: '', width: '', height: '' });\n      }\n    }\n  };\n\n  /**\n   * Function that updates element sticky rectangle (with sticky container), then activate or deactivate element, then update position if it's active\n   * @function\n   */\n\n\n  Sticky.prototype.update = function update() {\n    var _this5 = this;\n\n    this.forEach(this.elements, function (element) {\n      element.sticky.rect = _this5.getRectangle(element);\n      element.sticky.container.rect = _this5.getRectangle(element.sticky.container);\n\n      _this5.activate(element);\n      _this5.setPosition(element);\n    });\n  };\n\n  /**\n   * Destroys sticky element, remove listeners\n   * @function\n   */\n\n\n  Sticky.prototype.destroy = function destroy() {\n    var _this6 = this;\n\n    this.forEach(this.elements, function (element) {\n      _this6.destroyResizeEvents(element);\n      _this6.destroyScrollEvents(element);\n      delete element.sticky;\n    });\n  };\n\n  /**\n   * Function that returns container element in which sticky element is stuck (if is not specified, then it's stuck to body)\n   * @function\n   * @param {node} element - Element which sticky container are looked for\n   * @return {node} element - Sticky container\n   */\n\n\n  Sticky.prototype.getStickyContainer = function getStickyContainer(element) {\n    var container = element.parentNode;\n\n    while (!container.hasAttribute('data-sticky-container') && !container.parentNode.querySelector(element.sticky.stickyContainer) && container !== this.body) {\n      container = container.parentNode;\n    }\n\n    return container;\n  };\n\n  /**\n   * Function that returns element rectangle & position (width, height, top, left)\n   * @function\n   * @param {node} element - Element which position & rectangle are returned\n   * @return {object}\n   */\n\n\n  Sticky.prototype.getRectangle = function getRectangle(element) {\n    this.css(element, { position: '', width: '', top: '', left: '' });\n\n    var width = Math.max(element.offsetWidth, element.clientWidth, element.scrollWidth);\n    var height = Math.max(element.offsetHeight, element.clientHeight, element.scrollHeight);\n\n    var top = 0;\n    var left = 0;\n\n    do {\n      top += element.offsetTop || 0;\n      left += element.offsetLeft || 0;\n      element = element.offsetParent;\n    } while (element);\n\n    return { top: top, left: left, width: width, height: height };\n  };\n\n  /**\n   * Function that returns viewport dimensions\n   * @function\n   * @return {object}\n   */\n\n\n  Sticky.prototype.getViewportSize = function getViewportSize() {\n    return {\n      width: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\n      height: Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n    };\n  };\n\n  /**\n   * Function that updates window scroll position\n   * @function\n   * @return {number}\n   */\n\n\n  Sticky.prototype.updateScrollTopPosition = function updateScrollTopPosition() {\n    this.scrollTop = (window.pageYOffset || document.scrollTop) - (document.clientTop || 0) || 0;\n  };\n\n  /**\n   * Helper function for loops\n   * @helper\n   * @param {array}\n   * @param {function} callback - Callback function (no need for explanation)\n   */\n\n\n  Sticky.prototype.forEach = function forEach(array, callback) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      callback(array[i]);\n    }\n  };\n\n  /**\n   * Helper function to add/remove css properties for specified element.\n   * @helper\n   * @param {node} element - DOM element\n   * @param {object} properties - CSS properties that will be added/removed from specified element\n   */\n\n\n  Sticky.prototype.css = function css(element, properties) {\n    for (var property in properties) {\n      if (properties.hasOwnProperty(property)) {\n        element.style[property] = properties[property];\n      }\n    }\n  };\n\n  return Sticky;\n}();\n\n/**\n * Export function that supports AMD, CommonJS and Plain Browser.\n */\n\n\n(function (root, factory) {\n  if (typeof exports !== 'undefined') {\n    module.exports = factory;\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else {\n    root.Sticky = factory;\n  }\n})(this, Sticky);","\r\nvar Sticky = require('./dist/sticky.compile.js');\r\n\r\nmodule.exports = Sticky;\r\n"],"sourceRoot":""}